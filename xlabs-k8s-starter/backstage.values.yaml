# 由oauth2-proxy对外暴露ingress
ingress:
  enabled: false

backstage:
  image:
    registry: docker.io
    repository: nxest/xlabs-developer-platform
    tag: 1.0.0-next-1
    pullPolicy: IfNotPresent

  extraEnvVars:
    # Node.js 忽略 https 证书校验
    - name: NODE_TLS_REJECT_UNAUTHORIZED
      value: "0"
    - name: ADMIN_TOKEN
      value: "<%= adminToken %>"

  appConfig: 
    app:
      title: 卫星实验室
      baseUrl: <%= baseUrl %>
    organization:
      name: XLabs Club

    backend:
      baseUrl: <%= baseUrl %>
      database:
        client: pg
        connection: 
          host: "${POSTGRES_HOST}"
          port: "${POSTGRES_PORT}"
          user: "${POSTGRES_USER}"
          password: "${POSTGRES_PASSWORD}"
      # reading:
      #   allow:
      #   - host: demo.backstage.io
      #     path:
      #      - /api/graphql/schema
      auth:
        externalAccess:
          - type: static
            options:
              token: ${ADMIN_TOKEN}
              subject: admin-curl-access
        # dangerouslyDisableDefaultAuthPolicy: true
        # keys:
        #   # node -p 'require("crypto").randomBytes(24).toString("base64")'
        #   - secret: 8Dv1Q7xdGcUbG+nuBL9RwGRd6dSesaTA

    techdocs:
      builder: 'local'
      generator:
        runIn: 'local' # Alternatives - `docker` or 'local'
      publisher:
        type: 'local'

    # kubernetes:
    #   serviceLocatorMethod:
    #     type: 'multiTenant'
    #   clusterLocatorMethods:
    #     - type: 'config'
    #       clusters:
    #         - url: https://kubernetes.default.svc
    #           name: k3s
    #           authProvider: 'serviceAccount'
    #           skipTLSVerify: true
    #           skipMetricsLookup: true

    permission:
      enabled: true
      # see https://github.com/backstage/community-plugins/tree/main/workspaces/rbac/plugins/rbac-backend
      rbac:
        maxDepth: 1
        admin:
          superUsers:
            # - name: user:default/alice
            - name: group:default/admin
          users:
            # - name: user:default/alice
            - name: group:default/admin
        pluginsWithPermission:
          - kubernetes
          - catalog
      # auth:
      #   dangerouslyDisableDefaultAuthPolicy: true
      #   # 这种配置方式已过时，切换到新的pluginKeyStore/externalAccess?
      #   keys:
      #     # node -p 'require("crypto").randomBytes(24).toString("base64")'
      #     - secret: 8Dv1Q7xdGcUbG+nuBL9RwGRd6dSesaTA

    # proxy:
    #   endpoints:
    #     '/xxx':
    #       target: http://192.168.0.1/xxx
    #       credentials: require
    #       allowedHeaders: ['Authorization','x-forwarded-user','X-Forwarded-Access-Token']

    auth:
      environment: production
      providers:
        oauth2Proxy:
          signIn:
            resolvers:
              - resolver: emailMatchingUserEntityProfileEmail
              # - resolver: emailLocalPartMatchingUserEntityName
              # - resolver: forwardedUserMatchingUserEntityName
    catalog:
      providers:
        keycloakOrg:
          default:
            baseUrl: <%= keycloakBaseUrl %>
            loginRealm: devops
            realm: devops
            # client需要在Service Account Roles里配置查询user和group的权限
            clientId: <%= backstageClientId %>
            clientSecret: <%= backstageClientSecret %>
            schedule:
              frequency: { minutes: 60 }
              timeout: { minutes: 10 }
              initialDelay: { minutes: 10 }
      rules:
        - allow: [Template, Component, System, Domain, API, Resource, Location, User, Group]
      # locations:
      #   - type: url
      #     target: https://github.com/backstage/demo/blob/master/catalog-info.yaml

postgresql:
  enabled: true
  auth:
    username: backstage
    password: <%= postgresPassword %>
    postgresPassword: <%= postgresPassword %>
    database: backstage
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: password
      replicationPasswordKey: replication-password


