## Custom resource configuration
crds:
  # -- Install and upgrade CRDs
  install: true
  # -- Keep CRDs on chart uninstall
  keep: true
  # -- Annotations to be added to all CRDs
  annotations: {}


## Event bus configuration
configs:
  ## NATS event bus
  nats:
    # -- Supported versions of NATS event bus
    # @default -- See [values.yaml]
    versions:
      - version: latest
        natsStreamingImage: nats-streaming:latest
        metricsExporterImage: natsio/prometheus-nats-exporter:latest
      - version: 0.22.1
        natsStreamingImage: nats-streaming:0.22.1
        metricsExporterImage: natsio/prometheus-nats-exporter:0.8.0

  ## JetStream event bus
  jetstream:
    # Default JetStream settings, could be overridden by EventBus JetStream spec
    # Ref: https://docs.nats.io/running-a-nats-service/configuration#jetstream
    settings:
      # -- Maximum size of the memory storage (e.g. 1G)
      maxMemoryStore: -1
      # -- Maximum size of the file storage (e.g. 20G)
      maxFileStore: -1
    streamConfig:
      # -- Maximum number of messages before expiring oldest message
      maxMsgs: 1000000
      # -- Maximum age of existing messages, i.e. “72h”, “4h35m”
      maxAge: 72h
      # Total size of messages before expiring oldest message, 0 means unlimited.
      maxBytes: 1GB
      # -- Number of replicas, defaults to 3 and requires minimal 3
      replicas: 3
      # -- Not documented at the moment
      duplicates: 300s
      # -- 0: Limits, 1: Interest, 2: WorkQueue
      retention: 0
      # -- 0: DiscardOld, 1: DiscardNew
      discard: 0
    # Supported versions of JetStream eventbus
    versions:
      - version: latest
        natsImage: nats:2.10.10
        metricsExporterImage: natsio/prometheus-nats-exporter:0.14.0
        configReloaderImage: natsio/nats-server-config-reloader:0.14.0
        startCommand: /nats-server
      - version: 2.8.1
        natsImage: nats:2.8.1
        metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
        configReloaderImage: natsio/nats-server-config-reloader:0.7.0
        startCommand: /nats-server
      - version: 2.8.1-alpine
        natsImage: nats:2.8.1-alpine
        metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
        configReloaderImage: natsio/nats-server-config-reloader:0.7.0
        startCommand: nats-server
      - version: 2.8.2
        natsImage: nats:2.8.2
        metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
        configReloaderImage: natsio/nats-server-config-reloader:0.7.0
        startCommand: /nats-server
      - version: 2.8.2-alpine
        natsImage: nats:2.8.2-alpine
        metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
        configReloaderImage: natsio/nats-server-config-reloader:0.7.0
        startCommand: nats-server
      - version: 2.9.1
        natsImage: nats:2.9.1
        metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
        configReloaderImage: natsio/nats-server-config-reloader:0.7.0
        startCommand: /nats-server
      - version: 2.9.12
        natsImage: nats:2.9.12
        metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
        configReloaderImage: natsio/nats-server-config-reloader:0.7.0
        startCommand: /nats-server
      - version: 2.9.16
        natsImage: nats:2.9.16
        metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
        configReloaderImage: natsio/nats-server-config-reloader:0.7.0
        startCommand: /nats-server
      - version: 2.10.10
        natsImage: nats:2.10.10
        metricsExporterImage: natsio/prometheus-nats-exporter:0.14.0
        configReloaderImage: natsio/nats-server-config-reloader:0.14.0
        startCommand: /nats-server

# -- Array of extra K8s manifests to deploy
## Note: Supports use of custom Helm templates
extraObjects: []
  # - apiVersion: secrets-store.csi.x-k8s.io/v1
  #   kind: SecretProviderClass
  #   metadata:
  #     name: argo-events-secrets-store
  #   spec:
  #     provider: aws
  #     parameters:
  #       objects: |
  #         - objectName: "argo-events"
  #           objectType: "secretsmanager"
  #           jmesPath:
  #               - path: "client_id"
  #                 objectAlias: "client_id"
  #               - path: "client_secret"
  #                 objectAlias: "client_secret"
  #     secretObjects:
  #     - data:
  #       - key: client_id
  #         objectName: client_id
  #       - key: client_secret
  #         objectName: client_secret
  #       secretName: argo-events-secrets-store
  #       type: Opaque
  #       labels:
  #         app.kubernetes.io/part-of: argocd

## Argo Events controller
controller:
  # -- Argo Events controller name string
  name: controller-manager

  rbac:
    # -- Create events controller RBAC
    enabled: true
    # -- Restrict events controller to operate only in a single namespace instead of cluster-wide scope.
    namespaced: false
    # -- Additional namespace to be monitored by the controller
    managedNamespace: ""
    # -- Additional user rules for event controller's rbac
    rules: []
  # -- Environment variables to pass to events controller
  env: []
  # - name: DEBUG_LOG
  #   value: "true"

  containerSecurityContext: {}
    # capabilities:
    #   drop:
    #     - all
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true

  # -- Additional volumes to the events controller pod
  volumes: []

  # -- Additional volumeMounts to the events controller main container
  volumeMounts: []
